---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Application Load Balancer'

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'General configuration'
        Parameters:
          - 'BaseName'
          - 'Environment'
      - Label:
          default: 'Network configuration'
        Parameters:
          - 'VpcId'
          - 'Subnets'
      - Label:
          default: 'SSM configuration'
        Parameters:
          - 'SsmKeyPrefix'
    ParameterLabels:
      BaseName:
        default: 'Base resource name'
      Environment:
        default: 'Environment'
      VpcId:
        default: 'VPC Identifier'
      Subnets:
        default: 'VPC Subnets'
      SsmKeyPrefix:
        default: 'Key prefix'

Parameters:

  BaseName:
    Description: 'This name will be used to build identifiers for the components in the stack'
    Type: 'String'
    AllowedPattern: '[-_a-z0-9]+'
    ConstraintDescription: 'Invalid name. Only lowercase letters, numbers, underscores and hyphens are allowed.'
    Default: 'alb'

  Environment:
    Description: 'Stack environment name'
    Type: 'String'
    AllowedValues:
      - 'Pro'
      - 'Pre'
    Default: 'Pro'

  VpcId:
    Description: 'AWS SSM Parameter name storing the VPC identifier'
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>'
    Default: '/network/vpc-id'

  Subnets:
    Description: 'AWS SSM Parameter name storing subnets for load balancer'
    Type: 'AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>'
    Default: '/network/subnets'

  SsmKeyPrefix:
    Description: 'Key prefix for AWS Systems Manager Parameters created in this stack'
    Type: 'String'
    Default: '/balancer'

Resources:

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Ref 'BaseName'
      Type: 'application'
      Subnets: !Ref 'Subnets'
      SecurityGroups:
        - !Ref 'SecurityGroup'
      LoadBalancerAttributes:
        - Key: 'deletion_protection.enabled'
          Value: 'true'
        - Key: 'routing.http2.enabled'
          Value: 'false'
      Tags:
        - Key: 'Name'
          Value: !Ref 'BaseName'
        - Key: 'Env'
          Value: !Ref 'Environment'

  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref 'LoadBalancer'
      Port: 80
      Protocol: 'HTTP'
      DefaultActions:
        - Type: 'forward'
          TargetGroupArn: !Ref 'DefaultTargetGroup'

  DefaultTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: !Sub '${BaseName}-default'
      Port: 80
      Protocol: 'HTTP'
      VpcId: !Ref 'VpcId'
      Tags:
        - Key: 'Name'
          Value: !Sub '${BaseName}-default'
        - Key: 'Env'
          Value: !Ref 'Environment'

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable access to load balancer'
      VpcId: !Ref 'VpcId'
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: 'Name'
          Value: !Sub '${BaseName}-lb'
        - Key: 'Env'
          Value: !Ref 'Environment'

  SsmDnsEndpoint:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '${SsmKeyPrefix}/dns-endpoint'
      Type: String
      Value: !GetAtt 'LoadBalancer.DNSName'
      Description: !Sub '${AWS::StackName} - Load Balancer DNS endpoint'
      Tags:
        Name: !Sub '${BaseName}-dnsendpoint'
        Env: !Ref 'Environment'

  SsmListenerArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '${SsmKeyPrefix}/listener-arn'
      Type: String
      Value: !Ref 'Listener'
      Description: !Sub '${AWS::StackName} - Load Balancer listener ARN'
      Tags:
        Name: !Sub '${BaseName}-listenerarn'
        Env: !Ref 'Environment'

  SsmSecurityGroup:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '${SsmKeyPrefix}/security-group'
      Type: String
      Value: !Ref 'SecurityGroup'
      Description: !Sub '${AWS::StackName} - Security group'
      Tags:
        Name: !Sub '${BaseName}-securitygroup'
        Env: !Ref 'Environment'

Outputs:

  LoadBalancerDns:
    Description: 'Load balancer DNS endpoint'
    Value: !GetAtt 'LoadBalancer.DNSName'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerDns'

  ListenerArn:
    Description: 'Load balancer listener ARN'
    Value: !Ref 'Listener'
    Export:
      Name: !Sub '${AWS::StackName}-ListenerArn'

  LoadBalancerSG:
    Description: 'Security group for load balancer'
    Value: !Ref 'SecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroup'
